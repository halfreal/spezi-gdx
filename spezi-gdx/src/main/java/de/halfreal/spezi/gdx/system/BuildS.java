package de.halfreal.spezi.gdx.system;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Enumeration;
import java.util.MissingResourceException;
import java.util.PropertyResourceBundle;
import java.util.ResourceBundle;

public class BuildS {

	private static String basedir;

	private static void createConstant(String key, String string,
			StringBuilder sb, boolean lastKey) {
		sb.append("/**\n *").append(string).append("\n */\n");
		sb.append(key);
		if (!lastKey) {
			sb.append(",\n");
		} else {
			sb.append(";\n");
		}
	}

	private static void createEnd(StringBuilder sb) {
		sb.append("\n}");
	}

	private static void createHeader(StringBuilder sb) {
		sb.append("package  de.halfreal.eafos.client.gen;\n\n");
		sb.append("\n/**\n Generated by BuidS, any changes will be overwritten \n*/\n");
		sb.append("public enum S {\n");
	}

	public static void main(String[] args) throws IOException {

		System.out.println(new File(".").getAbsolutePath());

		basedir = "";
		if (args.length > 0) {
			basedir = args[0] + "/";
		}

		System.out.println(basedir);

		FileInputStream handle = new FileInputStream(basedir
				+ "../eafos-client-android/assets/strings/messages.properties");
		FileInputStream handleDe = new FileInputStream(
				basedir
						+ "../eafos-client-android/assets/strings/messages_de.properties");
		ResourceBundle bundle = new PropertyResourceBundle(handle);
		ResourceBundle bundleDe = new PropertyResourceBundle(handleDe);
		Enumeration<String> keys = bundle.getKeys();
		StringBuilder sb = new StringBuilder();
		createHeader(sb);
		while (keys.hasMoreElements()) {
			String key = keys.nextElement();
			createConstant(key, bundle.getString(key), sb,
					!keys.hasMoreElements());
			try {
				bundleDe.getString(key);
			} catch (MissingResourceException e) {
				System.err.println("no german translation for: " + key);
			}
		}
		createEnd(sb);
		save(sb);

	}

	private static void save(StringBuilder sb) throws IOException {

		FileWriter writer = null;
		try {
			writer = new FileWriter(
					basedir
							+ "../eafos-client3/src/main/gen/de/halfreal/eafos/client/gen/S.java",
					false);
			writer.write(sb.toString());
		} catch (IOException e) {
			throw e;
		} finally {
			if (writer != null) {
				writer.close();
			}
		}
	}

}
